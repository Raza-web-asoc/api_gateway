http {
    upstream auth_service {
        server api:8000;
    }

    upstream pets_service {
        server raza-pets-ms:8000;
    }

    upstream images_service {
        server raza-images-ms:8000;
    }

    upstream matchs_service {
        server raza-matchs-ms:8000;
    }

    upstream chats_service {
        server raza-chats-ms:8000;
    }

    server {
        listen 80;


        # Verificación del token
        location /api/verify_token {

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }

            if ($http_authorization = "") {
                return 401 "Authorization header missing";
            }
            proxy_pass http://auth_service/token;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Signin
        location /api/signin {
            if ($request_method = 'OPTIONS') {
                        add_header Access-Control-Allow-Origin "http://localhost:5173";
                        add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                        add_header Access-Control-Allow-Credentials true;
                        add_header Content-Length 0;
                        return 204;
            }
            proxy_pass http://auth_service/signin;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Signup
        location /api/signup {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            proxy_pass http://auth_service/signup;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Profile
        location /api/edit_profile {
            auth_request /api/verify_token;
            proxy_pass http://auth_service/user/update;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Endpoints de /api/pets
        location /api/pets {

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Redirigir dependiendo del endpoint después de /api/pets
            location /api/pets/mascotas {
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                proxy_pass http://pets_service/mascotas/;
            }

            location ~ ^/api/pets/mascotas/([^/]+)$ {
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                set $pet_id $1;
                proxy_pass http://pets_service/mascotas/$pet_id;
            }

            location ~ ^/api/pets/mascotas/usuario/([^/]+)$ {
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "*";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                set $usuario_id $1;
                proxy_pass http://pets_service/mascotas/usuario/$usuario_id;
                add_header X-Usuario-Id $usuario_id;
            }

            location /api/pets/razas {
            if ($request_method = 'OPTIONS') {
                            add_header Access-Control-Allow-Origin "http://localhost:5173";
                            add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                            add_header Access-Control-Allow-Credentials true;
                            add_header Content-Length 0;
                            return 204;
                        }
                proxy_pass http://pets_service/razas/;
            }

            location /api/pets/especies {
            if ($request_method = 'OPTIONS') {
                            add_header Access-Control-Allow-Origin "http://localhost:5173";
                            add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                            add_header Access-Control-Allow-Credentials true;
                            add_header Content-Length 0;
                            return 204;
                        }
                proxy_pass http://pets_service/especies/;
            }
        }

        # Endpoints de /api/chats
        location /api/chats {

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Redirigir dependiendo del endpoint después de /api/chats
            location /api/chats/all {
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                proxy_pass http://chats_service/chats/all;
            }

            location /api/chats/save-message {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            auth_request /api/verify_token;

            # Obtener headers de microservicio de auth
            auth_request_set $auth_user_id $upstream_http_x_auth_user_id;
            auth_request_set $auth_user_role $upstream_http_x_auth_role;

            # Establecer los headers para enviarlos al microservicio
            proxy_set_header X-Auth-User-Id $auth_user_id;
            proxy_set_header X-Auth-Role $auth_user_role;

            proxy_pass http://chats_service/chats/save-message;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

            location ~ ^/api/chats/get-chat/([^/]+)/([^/]+)$ {
            if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                set $pet_id1 $1;
                set $pet_id2 $2;
                proxy_pass http://chats_service/chats/get-chat/$pet_id1/$pet_id2;
            }

            location ~ ^/api/chats/create-chat/([^/]+)/([^/]+)$ {
            if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                set $pet_id1 $1;
                set $pet_id2 $2;
                proxy_pass http://chats_service/chats/create-chat/$pet_id1/$pet_id2;
            }

            location ~ ^/api/chats/get-available-chats/([^/]+)$ {
            if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "http://localhost:5173";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    return 204;
                }
                set $pet_id $1;
                proxy_pass http://chats_service/chats/get-available-chats/$pet_id;
            }
        }

        # Crear mascota
        location /api/pets/mascotas/registrar {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            auth_request /api/verify_token;

            # Obtener headers de microservicio de auth
            auth_request_set $auth_user_id $upstream_http_x_auth_user_id;
            auth_request_set $auth_user_role $upstream_http_x_auth_role;

            # Establecer los headers para enviarlos al microservicio
            proxy_set_header X-Auth-User-Id $auth_user_id;
            proxy_set_header X-Auth-Role $auth_user_role;

            proxy_pass http://pets_service/mascotas/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Imagenes usuario
        location /api/upload-user-image {
            if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin "*";  # Permitir acceso desde cualquier origen
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";  # Métodos permitidos
                    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Content-Length, X-Requested-With, X-Custom-Header";  # Permitir todos los encabezados relevantes para subir archivos
                    add_header Access-Control-Allow-Credentials true;  # Si es necesario permitir credenciales
                    add_header Content-Length 0;
                    return 204;  # Responder con un código 204 sin cuerpo
                }

                # Si no es una solicitud OPTIONS, manejar la subida de la imagen
                proxy_pass http://images_service/upload-user-image;  # Redirigir al servicio de imágenes

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Añadir los mismos encabezados CORS para otros métodos
                add_header Access-Control-Allow-Origin "*";  # Permitir acceso desde cualquier origen
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";  # Métodos permitidos
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Content-Length, X-Requested-With, X-Custom-Header";  # Permitir todos los encabezados relevantes para subir archivos
                add_header Access-Control-Allow-Credentials true;
        }

        # Obtener imagen usuario
        location /api/get-user-image {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS, DELETE";
                add_header Access-Control-Allow-Headers "*";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass http://images_service/get-user-image;
            proxy_pass_request_body off; # Deshabilita el envío del cuerpo en GET
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        # Imagenes mascotas
        location /api/upload-pet-images {
        if ($request_method = 'OPTIONS') {
                                add_header Access-Control-Allow-Origin "http://localhost:5173";
                                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                                add_header Access-Control-Allow-Headers "*";
                                add_header Access-Control-Allow-Credentials true;
                                add_header Content-Length 0;
                                return 204;
                    }
            proxy_pass http://images_service/upload-pet-images;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/get-pet-images {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "*";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }
            proxy_pass http://images_service/get-pet-images;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/match-pet {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT"; # Métodos permitidos
                add_header Access-Control-Allow-Headers "*";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass http://matchs_service/api/swipe;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }



        # Manejo de errores
        error_page 401 = @error_401;
        location @error_401 {
            return 401 "Unauthorized: Invalid or missing JWT";
        }
    }
}
events{}